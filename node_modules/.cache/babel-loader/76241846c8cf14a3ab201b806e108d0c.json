{"ast":null,"code":"import useForm from \"./useForm\";\nexport default function validateInfo(values) {\n  let errors = {};\n  let creditCard = valid.number(values.cardNumber);\n  creditCard.expirationDate = valid.expirationDate(values.cardExpiration);\n  creditCard.cvv = valid.cvv(values.cardSecurityCode);\n  creditCard.cardholderName = valid.cardholderName(values.cardName);\n  creditCard.postalCode = valid.postalCode(values.cardPostalCode);\n  errors.show = true;\n  errors.variant = \"danger\";\n  errors.message = \"An unknown error occured. Please try again later\";\n  errors.cname = false;\n  errors.cnumber = false;\n  errors.ctype = false;\n  errors.cexp = false;\n  errors.ccvv = false;\n  errors.cpostal = false;\n\n  if (values.cardPostalCode === null || !values.cardPostalCode.trim()) {\n    errors.message = \"Credit card postal code is not complete\";\n  } else if (creditCard.postalCode.isValid) {\n    errors.cpostal = true;\n  } else {\n    errors.message = \"Credit card postal code is invalid\";\n  } //Card CVV expiration\n\n\n  if (values.cardSecurityCode === null || !values.cardSecurityCode.trim()) {\n    errors.message = \"Credit card CVC is not complete\";\n  } else if (creditCard.cvv.isValid) {\n    errors.ccvv = true;\n  } else {\n    errors.message = \"Credit card CVC is invalid\";\n  } //Card Expiration Verification\n\n\n  if (values.cardExpiration === null || !values.cardExpiration.trim()) {\n    errors.message = \"Credit card expiration date is not complete\";\n  } else if (creditCard.expirationDate.isValid) {\n    errors.cexp = true;\n  } else {\n    errors.message = \"Credit card expiration date is invalid\";\n  } //Card Type Verification\n\n\n  if (values.cardType === null || !values.cardType.trim() || creditCard.card === null) {\n    errors.message = \"Credit card type is not complete\";\n  } else if (creditCard.card.type && creditCard.card.type.toUpperCase() === values.cardType.toUpperCase()) {\n    errors.ctype = true;\n  } else {\n    errors.message = \"Credit card type is invalid\";\n  } //Card Number Verification\n\n\n  if (values.cardNumber === null || !values.cardNumber.trim()) {\n    errors.message = \"Credit card number is not complete\";\n  } else if (creditCard.isValid) {\n    errors.cnumber = true;\n  } else {\n    errors.message = \"Credit card number is invalid\";\n  } //Cardholder Name Verification\n\n\n  if (values.cardName === null || !values.cardName.trim()) {\n    errors.message = \"Cardholder name is not complete\";\n  } else if (creditCard.cardholderName.isValid) {\n    errors.cname = true;\n  } else {\n    errors.message = \"Cardholder name is invalid\";\n  }\n\n  if (errors.ctype && errors.cname && errors.cnumber && errors.cexp && errors.cpostal && errors.ccvv) {\n    errors.variant = \"success\";\n    errors.message = \"Credit Card is valid\";\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["E:/React Projects/react-website-v1-master/src/validateInfo.js"],"names":["useForm","validateInfo","values","errors","creditCard","valid","number","cardNumber","expirationDate","cardExpiration","cvv","cardSecurityCode","cardholderName","cardName","postalCode","cardPostalCode","show","variant","message","cname","cnumber","ctype","cexp","ccvv","cpostal","trim","isValid","cardType","card","type","toUpperCase"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC3C,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,UAAU,GAAGC,KAAK,CAACC,MAAN,CAAaJ,MAAM,CAACK,UAApB,CAAjB;AAEAH,EAAAA,UAAU,CAACI,cAAX,GAA4BH,KAAK,CAACG,cAAN,CAAqBN,MAAM,CAACO,cAA5B,CAA5B;AACAL,EAAAA,UAAU,CAACM,GAAX,GAAiBL,KAAK,CAACK,GAAN,CAAUR,MAAM,CAACS,gBAAjB,CAAjB;AACAP,EAAAA,UAAU,CAACQ,cAAX,GAA4BP,KAAK,CAACO,cAAN,CAAqBV,MAAM,CAACW,QAA5B,CAA5B;AACAT,EAAAA,UAAU,CAACU,UAAX,GAAwBT,KAAK,CAACS,UAAN,CAAiBZ,MAAM,CAACa,cAAxB,CAAxB;AAEAZ,EAAAA,MAAM,CAACa,IAAP,GAAc,IAAd;AACAb,EAAAA,MAAM,CAACc,OAAP,GAAiB,QAAjB;AACAd,EAAAA,MAAM,CAACe,OAAP,GAAiB,kDAAjB;AACAf,EAAAA,MAAM,CAACgB,KAAP,GAAe,KAAf;AACAhB,EAAAA,MAAM,CAACiB,OAAP,GAAiB,KAAjB;AACAjB,EAAAA,MAAM,CAACkB,KAAP,GAAe,KAAf;AACAlB,EAAAA,MAAM,CAACmB,IAAP,GAAc,KAAd;AACAnB,EAAAA,MAAM,CAACoB,IAAP,GAAc,KAAd;AACApB,EAAAA,MAAM,CAACqB,OAAP,GAAiB,KAAjB;;AAEA,MAAItB,MAAM,CAACa,cAAP,KAA0B,IAA1B,IAAkC,CAACb,MAAM,CAACa,cAAP,CAAsBU,IAAtB,EAAvC,EAAqE;AACnEtB,IAAAA,MAAM,CAACe,OAAP,GAAiB,yCAAjB;AACD,GAFD,MAEO,IAAId,UAAU,CAACU,UAAX,CAAsBY,OAA1B,EAAmC;AACxCvB,IAAAA,MAAM,CAACqB,OAAP,GAAiB,IAAjB;AACD,GAFM,MAEA;AACLrB,IAAAA,MAAM,CAACe,OAAP,GAAiB,oCAAjB;AACD,GAzB0C,CA2B3C;;;AACA,MAAIhB,MAAM,CAACS,gBAAP,KAA4B,IAA5B,IAAoC,CAACT,MAAM,CAACS,gBAAP,CAAwBc,IAAxB,EAAzC,EAAyE;AACvEtB,IAAAA,MAAM,CAACe,OAAP,GAAiB,iCAAjB;AACD,GAFD,MAEO,IAAId,UAAU,CAACM,GAAX,CAAegB,OAAnB,EAA4B;AACjCvB,IAAAA,MAAM,CAACoB,IAAP,GAAc,IAAd;AACD,GAFM,MAEA;AACLpB,IAAAA,MAAM,CAACe,OAAP,GAAiB,4BAAjB;AACD,GAlC0C,CAoC3C;;;AACA,MAAIhB,MAAM,CAACO,cAAP,KAA0B,IAA1B,IAAkC,CAACP,MAAM,CAACO,cAAP,CAAsBgB,IAAtB,EAAvC,EAAqE;AACnEtB,IAAAA,MAAM,CAACe,OAAP,GAAiB,6CAAjB;AACD,GAFD,MAEO,IAAId,UAAU,CAACI,cAAX,CAA0BkB,OAA9B,EAAuC;AAC5CvB,IAAAA,MAAM,CAACmB,IAAP,GAAc,IAAd;AACD,GAFM,MAEA;AACLnB,IAAAA,MAAM,CAACe,OAAP,GAAiB,wCAAjB;AACD,GA3C0C,CA6C3C;;;AACA,MACEhB,MAAM,CAACyB,QAAP,KAAoB,IAApB,IACA,CAACzB,MAAM,CAACyB,QAAP,CAAgBF,IAAhB,EADD,IAEArB,UAAU,CAACwB,IAAX,KAAoB,IAHtB,EAIE;AACAzB,IAAAA,MAAM,CAACe,OAAP,GAAiB,kCAAjB;AACD,GAND,MAMO,IACLd,UAAU,CAACwB,IAAX,CAAgBC,IAAhB,IACAzB,UAAU,CAACwB,IAAX,CAAgBC,IAAhB,CAAqBC,WAArB,OAAuC5B,MAAM,CAACyB,QAAP,CAAgBG,WAAhB,EAFlC,EAGL;AACA3B,IAAAA,MAAM,CAACkB,KAAP,GAAe,IAAf;AACD,GALM,MAKA;AACLlB,IAAAA,MAAM,CAACe,OAAP,GAAiB,6BAAjB;AACD,GA3D0C,CA6D3C;;;AACA,MAAIhB,MAAM,CAACK,UAAP,KAAsB,IAAtB,IAA8B,CAACL,MAAM,CAACK,UAAP,CAAkBkB,IAAlB,EAAnC,EAA6D;AAC3DtB,IAAAA,MAAM,CAACe,OAAP,GAAiB,oCAAjB;AACD,GAFD,MAEO,IAAId,UAAU,CAACsB,OAAf,EAAwB;AAC7BvB,IAAAA,MAAM,CAACiB,OAAP,GAAiB,IAAjB;AACD,GAFM,MAEA;AACLjB,IAAAA,MAAM,CAACe,OAAP,GAAiB,+BAAjB;AACD,GApE0C,CAsE3C;;;AACA,MAAIhB,MAAM,CAACW,QAAP,KAAoB,IAApB,IAA4B,CAACX,MAAM,CAACW,QAAP,CAAgBY,IAAhB,EAAjC,EAAyD;AACvDtB,IAAAA,MAAM,CAACe,OAAP,GAAiB,iCAAjB;AACD,GAFD,MAEO,IAAId,UAAU,CAACQ,cAAX,CAA0Bc,OAA9B,EAAuC;AAC5CvB,IAAAA,MAAM,CAACgB,KAAP,GAAe,IAAf;AACD,GAFM,MAEA;AACLhB,IAAAA,MAAM,CAACe,OAAP,GAAiB,4BAAjB;AACD;;AAED,MACEf,MAAM,CAACkB,KAAP,IACAlB,MAAM,CAACgB,KADP,IAEAhB,MAAM,CAACiB,OAFP,IAGAjB,MAAM,CAACmB,IAHP,IAIAnB,MAAM,CAACqB,OAJP,IAKArB,MAAM,CAACoB,IANT,EAOE;AACApB,IAAAA,MAAM,CAACc,OAAP,GAAiB,SAAjB;AACAd,IAAAA,MAAM,CAACe,OAAP,GAAiB,sBAAjB;AACD;;AAED,SAAOf,MAAP;AACD","sourcesContent":["import useForm from \"./useForm\";\r\nexport default function validateInfo(values) {\r\n  let errors = {};\r\n  let creditCard = valid.number(values.cardNumber);\r\n\r\n  creditCard.expirationDate = valid.expirationDate(values.cardExpiration);\r\n  creditCard.cvv = valid.cvv(values.cardSecurityCode);\r\n  creditCard.cardholderName = valid.cardholderName(values.cardName);\r\n  creditCard.postalCode = valid.postalCode(values.cardPostalCode);\r\n\r\n  errors.show = true;\r\n  errors.variant = \"danger\";\r\n  errors.message = \"An unknown error occured. Please try again later\"\r\n  errors.cname = false;\r\n  errors.cnumber = false;\r\n  errors.ctype = false;\r\n  errors.cexp = false;\r\n  errors.ccvv = false;\r\n  errors.cpostal = false;\r\n\r\n  if (values.cardPostalCode === null || !values.cardPostalCode.trim()) {\r\n    errors.message = \"Credit card postal code is not complete\";\r\n  } else if (creditCard.postalCode.isValid) {\r\n    errors.cpostal = true;\r\n  } else {\r\n    errors.message = \"Credit card postal code is invalid\";\r\n  }\r\n\r\n  //Card CVV expiration\r\n  if (values.cardSecurityCode === null || !values.cardSecurityCode.trim()) {\r\n    errors.message = \"Credit card CVC is not complete\";\r\n  } else if (creditCard.cvv.isValid) {\r\n    errors.ccvv = true;\r\n  } else {\r\n    errors.message = \"Credit card CVC is invalid\";\r\n  }\r\n\r\n  //Card Expiration Verification\r\n  if (values.cardExpiration === null || !values.cardExpiration.trim()) {\r\n    errors.message = \"Credit card expiration date is not complete\";\r\n  } else if (creditCard.expirationDate.isValid) {\r\n    errors.cexp = true;\r\n  } else {\r\n    errors.message = \"Credit card expiration date is invalid\";\r\n  }\r\n\r\n  //Card Type Verification\r\n  if (\r\n    values.cardType === null ||\r\n    !values.cardType.trim() ||\r\n    creditCard.card === null\r\n  ) {\r\n    errors.message = \"Credit card type is not complete\";\r\n  } else if (\r\n    creditCard.card.type &&\r\n    creditCard.card.type.toUpperCase() === values.cardType.toUpperCase()\r\n  ) {\r\n    errors.ctype = true;\r\n  } else {\r\n    errors.message = \"Credit card type is invalid\";\r\n  }\r\n\r\n  //Card Number Verification\r\n  if (values.cardNumber === null || !values.cardNumber.trim()) {\r\n    errors.message = \"Credit card number is not complete\";\r\n  } else if (creditCard.isValid) {\r\n    errors.cnumber = true;\r\n  } else {\r\n    errors.message = \"Credit card number is invalid\";\r\n  }\r\n\r\n  //Cardholder Name Verification\r\n  if (values.cardName === null || !values.cardName.trim()) {\r\n    errors.message = \"Cardholder name is not complete\";\r\n  } else if (creditCard.cardholderName.isValid) {\r\n    errors.cname = true;\r\n  } else {\r\n    errors.message = \"Cardholder name is invalid\";\r\n  }\r\n\r\n  if (\r\n    errors.ctype &&\r\n    errors.cname &&\r\n    errors.cnumber &&\r\n    errors.cexp &&\r\n    errors.cpostal &&\r\n    errors.ccvv\r\n  ) {\r\n    errors.variant = \"success\";\r\n    errors.message = \"Credit Card is valid\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}